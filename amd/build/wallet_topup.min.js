define("paygw_paynocchio/wallet_topup",["exports","./repository"],(function(_exports,_repository){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;
/**
   * Paynocchio repository module to encapsulate all of the AJAX requests that can be sent for bank.
   *
   * @module     paygw_paynocchio/repository
   * @copyright  2024 Paynocchio <ceo@paynocchio.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const getCurrentRewardRule=(obj,num,operationType)=>{let value_type,totalValue=0,minAmount=1/0,maxAmount=-1/0;return obj&&obj.forEach((item=>{item.operation_type===operationType&&num>=item.min_amount&&num<=item.max_amount&&(totalValue+=item.value,value_type=item.value_type,item.min_amount<minAmount&&(minAmount=item.min_amount),item.max_amount>maxAmount&&(maxAmount=item.max_amount))})),{totalValue:totalValue,minAmount:minAmount,maxAmount:maxAmount,value_type:value_type}},calculateReward=(amount,rules,type)=>{const total_value=getCurrentRewardRule(rules,amount,type).totalValue;return"percentage"===getCurrentRewardRule(rules,amount,type).value_type?parseInt(amount*(total_value/100)):total_value};_exports.init=(pay,minimum_topup_amount,card_balance_limit,balance,rewarding_rules)=>{const reducedRules=(data=>{const result=[];return data?(data.forEach((item=>{let existing=result.find((el=>el.operation_type===item.operation_type&&el.min_amount===item.min_amount&&el.max_amount===item.max_amount));existing?existing.value+=item.value:result.push({...item})})),result):null})(rewarding_rules),paynocchio_wallet_topup_button=document.getElementById("paynocchio_topup_button");let need_to_top_up=0;need_to_top_up=pay&&document.getElementById("need_to_top_up")?parseFloat(document.getElementById("need_to_top_up").innerText):minimum_topup_amount,paynocchio_wallet_topup_button&&paynocchio_wallet_topup_button.addEventListener("click",(()=>{(0,_repository.showModalWithTopup)(minimum_topup_amount,card_balance_limit).then((modal=>{modal.setTitle("Topup your Wallet");const button=modal.body.find("#topup_button"),input=modal.body.find("#top_up_amount"),message=modal.body.find("#topup_message");if(need_to_top_up){const top_up_default_input=need_to_top_up<=minimum_topup_amount?minimum_topup_amount:need_to_top_up;input.val(top_up_default_input),calculateReward(need_to_top_up,reducedRules,"payment_operation_add_money")>0&&message.text(`You will get ${calculateReward(need_to_top_up,reducedRules,"payment_operation_add_money")} bonuses`)}input.on("keyup change",(evt=>{parseFloat(evt.target.value)+balance>card_balance_limit?(message.text(`When replenishing the amount ${evt.target.value}, \n                            the balance limit will exceed the set value ${card_balance_limit}`),button.addClass("disabled")):evt.target.value>=minimum_topup_amount?(calculateReward(evt.target.value,reducedRules,"payment_operation_add_money")>0?message.text(`You will get ${calculateReward(evt.target.value,reducedRules,"payment_operation_add_money")} bonuses`):message.text(""),button.removeClass("disabled")):(message.text("Please enter amount more than minimum replenishment amount."),button.addClass("disabled"))})),button.click((()=>{if(input.val()){button.addClass("disabled"),modal.body.find(".paynocchio-spinner").toggleClass("active"),modal.body.find("#topup_message").text("Working...");let redirectLink=window.location.href,regex=new RegExp("[?&](success=)[^&]+");redirectLink=redirectLink.replace(regex,""),-1!=redirectLink.indexOf("?")?redirectLink+="&success=1":redirectLink+="?success=1",(0,_repository.handleTopUpClick)(input.val(),redirectLink).then((data=>{!data.is_error&&data.url?(modal.body.find("#topup_message").text("OK... Sending to Stripe..."),window.location.replace(data.url)):(modal.body.find(".paynocchio-spinner").toggleClass("active"),modal.body.find("#topup_message").text(data.message),button.toggleClass("disabled"))}))}}))}))}))}}));

//# sourceMappingURL=wallet_topup.min.js.map