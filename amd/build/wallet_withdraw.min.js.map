{"version":3,"file":"wallet_withdraw.min.js","sources":["../src/wallet_withdraw.js"],"sourcesContent":["// This file is part of the Paynocchio payments module for Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Paynocchio repository module to encapsulate all of the AJAX requests that can be sent for bank.\n *\n * @module     paygw_paynocchio/repository\n * @copyright  2024 Paynocchio <ceo@paynocchio.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {handleWithdrawClick, showModalWithWithdraw} from \"./repository\";\nimport {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\n\nexport const init = (pay) => {\n    const paynocchio_wallet_withdraw_button = document.getElementById('paynocchio_withdraw_button');\n\n    if (paynocchio_wallet_withdraw_button) {\n\n        paynocchio_wallet_withdraw_button.addEventListener('click', () => {\n            showModalWithWithdraw()\n                .then(modal => {\n                    modal.setTitle('Withdraw from Paynocchio Wallet');\n                    const input = modal.body.find('#withdraw_amount');\n                    const button = modal.body.find('#withdraw_button');\n                    button.click(() => {\n                        if (input.val()) {\n                            button.addClass('disabled');\n                            modal.body.find('.paynocchio-spinner').toggleClass('active');\n                            handleWithdrawClick(input.val())\n                                .then(data => {\n                                    if (data.success) {\n                                        //window.console.log(data);\n                                        if(pay) {\n                                            window.location.reload();\n                                        } else {\n                                            modal.body.find('.paynocchio-spinner').toggleClass('active');\n                                            modal.body.find('#topup_message').text('Success!');\n                                            setBalance(data.balance);\n                                            setBonus(data.bonuses);\n                                            setTimeout(() => {\n                                                modal.hide();\n                                                modal.destroy();\n                                                Templates.renderForPromise('paygw_paynocchio/wallet_transactions', {\n                                                    transactions: JSON.parse(data.transactions),\n                                                    hastransactions: data.hastransactions,\n                                            })\n                                                    .then(({html, js}) => {\n                                                        Templates.replaceNodeContents('.paynocchio-transactions', html, js);\n                                                    })\n                                                    .catch((error) => displayException(error));\n\n                                            }, 1000);\n                                        }\n                                    }\n                                });\n                        }\n                    });\n                });\n        });\n    }\n\n    /**\n     * Setting the Card balance value\n     * @param {number} value\n     */\n    function setBalance(value) {\n        const paynocchio_card_balance_value = document.querySelector('.paynocchio-balance-value');\n        paynocchio_card_balance_value.innerText = value;\n    }\n\n    /**\n     * Setting the Card bonuses value\n     * @param {number} value\n     */\n    function setBonus(value) {\n        const paynocchio_card_bonus_value = document.querySelector('.paynocchio-bonus-value');\n        paynocchio_card_bonus_value.innerText = value;\n    }\n};"],"names":["pay","paynocchio_wallet_withdraw_button","document","getElementById","addEventListener","then","modal","setTitle","input","body","find","button","click","val","addClass","toggleClass","data","value","success","window","location","reload","text","balance","querySelector","innerText","setBonus","bonuses","setTimeout","hide","destroy","renderForPromise","transactions","JSON","parse","hastransactions","_ref","html","js","replaceNodeContents","catch","error"],"mappings":";;;;;;;8JA2BqBA,YACXC,kCAAoCC,SAASC,eAAe,8BAE9DF,mCAEAA,kCAAkCG,iBAAiB,SAAS,6CAEnDC,MAAKC,QACFA,MAAMC,SAAS,yCACTC,MAAQF,MAAMG,KAAKC,KAAK,oBACxBC,OAASL,MAAMG,KAAKC,KAAK,oBAC/BC,OAAOC,OAAM,KACLJ,MAAMK,QACNF,OAAOG,SAAS,YAChBR,MAAMG,KAAKC,KAAK,uBAAuBK,YAAY,8CAC/BP,MAAMK,OACrBR,MAAKW,WAoCdC,MAnCgBD,KAAKE,UAEFlB,IACCmB,OAAOC,SAASC,UAEhBf,MAAMG,KAAKC,KAAK,uBAAuBK,YAAY,UACnDT,MAAMG,KAAKC,KAAK,kBAAkBY,KAAK,YA6B3DL,MA5B+BD,KAAKO,QA6BdrB,SAASsB,cAAc,6BAC/BC,UAAYR,eAO5BA,OACsBf,SAASsB,cAAc,2BAC/BC,UAAYR,MAtCJS,CAASV,KAAKW,SACdC,YAAW,KACPtB,MAAMuB,OACNvB,MAAMwB,6BACIC,iBAAiB,uCAAwC,CAC/DC,aAAcC,KAAKC,MAAMlB,KAAKgB,cAC9BG,gBAAiBnB,KAAKmB,kBAErB9B,MAAK+B,WAACC,KAACA,KAADC,GAAOA,4BACAC,oBAAoB,2BAA4BF,KAAMC,OAEnEE,OAAOC,QAAU,2BAAiBA,WAExC"}