{"version":3,"file":"wallet_withdraw.min.js","sources":["../src/wallet_withdraw.js"],"sourcesContent":["// This file is part of the Paynocchio payments module for Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Paynocchio repository module to encapsulate all of the AJAX requests that can be sent for bank.\n *\n * @module     paygw_paynocchio/repository\n * @copyright  2024 Paynocchio <ceo@paynocchio.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {calculateReward, handleWithdrawClick, showModalWithWithdraw} from \"./repository\";\nimport debounce from \"./debounce\";\n\nconst debounceTime = 500;\n\nconst checkAvailability = (inputVal, balance) => {\n\n    if(\n        inputVal === '' ||\n        parseFloat(inputVal) === 0 ||\n        parseFloat(inputVal) > parseFloat(balance)\n    ) {\n        return false;\n    }\n    return true;\n};\n\nexport const init = (balance, card_balance_limit) => {\n    const paynocchio_wallet_withdraw_button = document.getElementById('paynocchio_withdraw_button');\n\n    if (paynocchio_wallet_withdraw_button) {\n\n        paynocchio_wallet_withdraw_button.addEventListener('click', () => {\n            showModalWithWithdraw()\n                .then(modal => {\n                    modal.setTitle('Withdraw from the Wallet');\n                    const input = modal.body.find('#withdraw_amount');\n                    const button = modal.body.find('#withdraw_button');\n                    const message = modal.body.find('#withdraw_message');\n\n                    if(!checkAvailability(input.val(), balance)) {\n                        button.addClass('disabled');\n                    }\n\n                    input.keyup(evt => {\n                        if(!checkAvailability(evt.target.value, balance)) {\n                            button.addClass('disabled');\n                        } else {\n                            button.removeClass('disabled');\n                        }\n                        const debouncedCalculateReward = debounce((inputValue) => {\n                            message.addClass('loading');\n                            message.addClass('loading');\n                            calculateReward(inputValue, 'payment_operation_add_money')\n                                .then((rewards) => {\n                                    if (inputValue + balance > card_balance_limit) {\n                                        message.text(`When replenishing the amount ${inputValue},\n                            the balance limit will exceed the set value ${card_balance_limit}.`);\n                                        message.text('');\n                                        button.addClass('disabled');\n                                    } else if (inputValue <= balance) {\n                                        message.addClass('loading');\n                                        message.text(\n                                            `You will receive $${rewards.sum_without_commission}. \n                    Commission: $${rewards.commission}.`\n                                        );\n                                        button.removeClass('disabled');\n                                    } else {\n                                        message.text('Please enter amount more than minimum replenishment amount.');\n                                        message.text('');\n                                        button.addClass('disabled');\n                                    }\n                                    message.removeClass('loading');\n                                    message.removeClass('loading');\n                                });\n                        }, debounceTime); // Adjust the wait time as needed\n\n                        debouncedCalculateReward(evt.target.value);\n                    });\n\n                    button.click(() => {\n                        if(!checkAvailability(input.val(), balance)) {\n                            modal.body.find('#withdraw_message').text('Yeah... right... ;)');\n                        } else {\n                            button.addClass('disabled');\n                            modal.body.find('.paynocchio-spinner').toggleClass('active');\n                            modal.body.find('#withdraw_message').text('Working...');\n                            handleWithdrawClick(input.val())\n                                .then(data => {\n                                    if (data.success) {\n                                        modal.body.find('.paynocchio-spinner').toggleClass('active');\n                                        modal.body.find('#withdraw_message').text('Success! Reloading...');\n                                        window.location.reload();\n                                    } else {\n                                        modal.body.find('.paynocchio-spinner').toggleClass('active');\n                                        modal.body.find('#withdraw_message')\n                                            .text('Something wrong. Please reload page and try again... ' + data.wallet_status);\n                                        button.toggleClass('disabled');\n                                    }\n                                });\n                        }\n                    });\n                });\n        });\n    }\n};"],"names":["checkAvailability","inputVal","balance","parseFloat","card_balance_limit","paynocchio_wallet_withdraw_button","document","getElementById","addEventListener","then","modal","setTitle","input","body","find","button","message","val","addClass","keyup","evt","target","value","removeClass","inputValue","rewards","text","sum_without_commission","commission","debouncedCalculateReward","click","toggleClass","data","success","window","location","reload","wallet_status"],"mappings":";;;;;;;oJA4BMA,kBAAoB,CAACC,SAAUC,YAGhB,KAAbD,UACyB,IAAzBE,WAAWF,WACXE,WAAWF,UAAYE,WAAWD,wBAOtB,CAACA,QAASE,4BACpBC,kCAAoCC,SAASC,eAAe,8BAE9DF,mCAEAA,kCAAkCG,iBAAiB,SAAS,6CAEnDC,MAAKC,QACFA,MAAMC,SAAS,kCACTC,MAAQF,MAAMG,KAAKC,KAAK,oBACxBC,OAASL,MAAMG,KAAKC,KAAK,oBACzBE,QAAUN,MAAMG,KAAKC,KAAK,qBAE5Bd,kBAAkBY,MAAMK,MAAOf,UAC/Ba,OAAOG,SAAS,YAGpBN,MAAMO,OAAMC,MACJpB,kBAAkBoB,IAAIC,OAAOC,MAAOpB,SAGpCa,OAAOQ,YAAY,YAFnBR,OAAOG,SAAS,aAIa,sBAAUM,aACvCR,QAAQE,SAAS,WACjBF,QAAQE,SAAS,2CACDM,WAAY,+BACvBf,MAAMgB,UACCD,WAAatB,QAAUE,oBACvBY,QAAQU,KAAM,gCAA+BF,wFACXpB,uBAClCY,QAAQU,KAAK,IACbX,OAAOG,SAAS,aACTM,YAActB,SACrBc,QAAQE,SAAS,WACjBF,QAAQU,KACH,qBAAoBD,QAAQE,8DACtCF,QAAQG,eAEHb,OAAOQ,YAAY,cAEnBP,QAAQU,KAAK,+DACbV,QAAQU,KAAK,IACbX,OAAOG,SAAS,aAEpBF,QAAQO,YAAY,WACpBP,QAAQO,YAAY,gBA5DnC,IAgEGM,CAAyBT,IAAIC,OAAOC,UAGxCP,OAAOe,OAAM,KACL9B,kBAAkBY,MAAMK,MAAOf,UAG/Ba,OAAOG,SAAS,YAChBR,MAAMG,KAAKC,KAAK,uBAAuBiB,YAAY,UACnDrB,MAAMG,KAAKC,KAAK,qBAAqBY,KAAK,kDACtBd,MAAMK,OACrBR,MAAKuB,OACEA,KAAKC,SACLvB,MAAMG,KAAKC,KAAK,uBAAuBiB,YAAY,UACnDrB,MAAMG,KAAKC,KAAK,qBAAqBY,KAAK,yBAC1CQ,OAAOC,SAASC,WAEhB1B,MAAMG,KAAKC,KAAK,uBAAuBiB,YAAY,UACnDrB,MAAMG,KAAKC,KAAK,qBACXY,KAAK,wDAA0DM,KAAKK,eACzEtB,OAAOgB,YAAY,iBAf/BrB,MAAMG,KAAKC,KAAK,qBAAqBY,KAAK"}