{"version":3,"file":"wallet_withdraw.min.js","sources":["../src/wallet_withdraw.js"],"sourcesContent":["// This file is part of the Paynocchio payments module for Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Paynocchio repository module to encapsulate all of the AJAX requests that can be sent for bank.\n *\n * @module     paygw_paynocchio/repository\n * @copyright  2024 Paynocchio <ceo@paynocchio.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {handleWithdrawClick, showModalWithWithdraw} from \"./repository\";\n\nconst checkAvailability = (inputVal, balance) => {\n\n    if(\n        inputVal === '' ||\n        parseFloat(inputVal) === 0 ||\n        parseFloat(inputVal) > parseFloat(balance)\n    ) {\n        return false;\n    }\n    return true;\n};\n\nexport const init = (balance) => {\n    const paynocchio_wallet_withdraw_button = document.getElementById('paynocchio_withdraw_button');\n\n    if (paynocchio_wallet_withdraw_button) {\n\n        paynocchio_wallet_withdraw_button.addEventListener('click', () => {\n            showModalWithWithdraw()\n                .then(modal => {\n                    modal.setTitle('Withdraw from the Wallet');\n                    const input = modal.body.find('#withdraw_amount');\n                    const button = modal.body.find('#withdraw_button');\n\n                    if(!checkAvailability(input.val(), balance)) {\n                        button.addClass('disabled');\n                    }\n\n                    input.keyup(evt => {\n                        if(!checkAvailability(evt.target.value, balance)) {\n                            button.addClass('disabled');\n                        } else {\n                            button.removeClass('disabled');\n                        }\n                    });\n\n                    button.click(() => {\n                        if(!checkAvailability(input.val(), balance)) {\n                            modal.body.find('#withdraw_message').text('Yeah... right... ;)');\n                        } else {\n                            button.addClass('disabled');\n                            modal.body.find('.paynocchio-spinner').toggleClass('active');\n                            modal.body.find('#withdraw_message').text('Working...');\n                            handleWithdrawClick(input.val())\n                                .then(data => {\n                                    if (data.success) {\n                                        modal.body.find('.paynocchio-spinner').toggleClass('active');\n                                        modal.body.find('#withdraw_message').text('Success! Reloading...');\n                                        setBalance(data.balance);\n                                        setBonus(data.bonuses);\n                                        window.location.reload();\n                                    } else {\n                                        modal.body.find('.paynocchio-spinner').toggleClass('active');\n                                        modal.body.find('#withdraw_message')\n                                            .text('Something wrong. Please reload page and try again... ' + data.wallet_status);\n                                        button.toggleClass('disabled');\n                                    }\n                                });\n                        }\n                    });\n                });\n        });\n    }\n\n    /**\n     * Setting the Card balance value\n     * @param {number} value\n     */\n    function setBalance(value) {\n        const paynocchio_card_balance_value = document.querySelector('.paynocchio-balance-value');\n        paynocchio_card_balance_value.innerText = value;\n    }\n\n    /**\n     * Setting the Card bonuses value\n     * @param {number} value\n     */\n    function setBonus(value) {\n        const paynocchio_card_bonus_value = document.querySelector('.paynocchio-bonus-value');\n        paynocchio_card_bonus_value.innerText = value;\n    }\n};"],"names":["checkAvailability","inputVal","balance","parseFloat","paynocchio_wallet_withdraw_button","document","getElementById","addEventListener","then","modal","setTitle","input","body","find","button","val","addClass","keyup","evt","target","value","removeClass","click","toggleClass","text","data","success","querySelector","innerText","setBonus","bonuses","window","location","reload","wallet_status"],"mappings":";;;;;;;;MAyBMA,kBAAoB,CAACC,SAAUC,YAGhB,KAAbD,UACyB,IAAzBE,WAAWF,WACXE,WAAWF,UAAYE,WAAWD,wBAOrBA,gBACXE,kCAAoCC,SAASC,eAAe,8BAE9DF,mCAEAA,kCAAkCG,iBAAiB,SAAS,6CAEnDC,MAAKC,QACFA,MAAMC,SAAS,kCACTC,MAAQF,MAAMG,KAAKC,KAAK,oBACxBC,OAASL,MAAMG,KAAKC,KAAK,oBAE3Bb,kBAAkBW,MAAMI,MAAOb,UAC/BY,OAAOE,SAAS,YAGpBL,MAAMM,OAAMC,MACJlB,kBAAkBkB,IAAIC,OAAOC,MAAOlB,SAGpCY,OAAOO,YAAY,YAFnBP,OAAOE,SAAS,eAMxBF,OAAOQ,OAAM,KACLtB,kBAAkBW,MAAMI,MAAOb,UAG/BY,OAAOE,SAAS,YAChBP,MAAMG,KAAKC,KAAK,uBAAuBU,YAAY,UACnDd,MAAMG,KAAKC,KAAK,qBAAqBW,KAAK,kDACtBb,MAAMI,OACrBP,MAAKiB,WAwBdL,MAvBgBK,KAAKC,SACLjB,MAAMG,KAAKC,KAAK,uBAAuBU,YAAY,UACnDd,MAAMG,KAAKC,KAAK,qBAAqBW,KAAK,yBAqB1DJ,MApB2BK,KAAKvB,QAqBVG,SAASsB,cAAc,6BAC/BC,UAAYR,eAO5BA,OACsBf,SAASsB,cAAc,2BAC/BC,UAAYR,MA9BRS,CAASJ,KAAKK,SACdC,OAAOC,SAASC,WAEhBxB,MAAMG,KAAKC,KAAK,uBAAuBU,YAAY,UACnDd,MAAMG,KAAKC,KAAK,qBACXW,KAAK,wDAA0DC,KAAKS,eACzEpB,OAAOS,YAAY,iBAjB/Bd,MAAMG,KAAKC,KAAK,qBAAqBW,KAAK"}