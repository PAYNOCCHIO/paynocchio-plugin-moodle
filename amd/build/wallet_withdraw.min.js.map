{"version":3,"file":"wallet_withdraw.min.js","sources":["../src/wallet_withdraw.js"],"sourcesContent":["// This file is part of the Paynocchio payments module for Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Paynocchio repository module to encapsulate all of the AJAX requests that can be sent for bank.\r\n *\r\n * @module     paygw_paynocchio/repository\r\n * @copyright  2024 Paynocchio <ceo@paynocchio.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {handleWithdrawClick, showModalWithWithdraw} from \"./repository\";\r\n\r\nconst checkAvailability = (inputVal, balance) => {\r\n\r\n    if(\r\n        inputVal === '' ||\r\n        parseFloat(inputVal) === 0 ||\r\n        parseFloat(inputVal) > parseFloat(balance)\r\n    ) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nexport const init = (balance) => {\r\n    const paynocchio_wallet_withdraw_button = document.getElementById('paynocchio_withdraw_button');\r\n\r\n    if (paynocchio_wallet_withdraw_button) {\r\n\r\n        paynocchio_wallet_withdraw_button.addEventListener('click', () => {\r\n            showModalWithWithdraw()\r\n                .then(modal => {\r\n                    modal.setTitle('Withdraw from the Wallet');\r\n                    const input = modal.body.find('#withdraw_amount');\r\n                    const button = modal.body.find('#withdraw_button');\r\n\r\n                    if(!checkAvailability(input.val(), balance)) {\r\n                        button.addClass('disabled');\r\n                    }\r\n\r\n                    input.keyup(evt => {\r\n                        if(!checkAvailability(evt.target.value, balance)) {\r\n                            button.addClass('disabled');\r\n                        } else {\r\n                            button.removeClass('disabled');\r\n                        }\r\n                    });\r\n\r\n                    button.click(() => {\r\n                        if(!checkAvailability(input.val(), balance)) {\r\n                            modal.body.find('#withdraw_message').text('Yeah... right... ;)');\r\n                        } else {\r\n                            button.addClass('disabled');\r\n                            modal.body.find('.paynocchio-spinner').toggleClass('active');\r\n                            modal.body.find('#withdraw_message').text('Working...');\r\n                            handleWithdrawClick(input.val())\r\n                                .then(data => {\r\n                                    if (data.success) {\r\n                                        modal.body.find('.paynocchio-spinner').toggleClass('active');\r\n                                        modal.body.find('#withdraw_message').text('Success! Reloading...');\r\n                                        window.location.reload();\r\n                                    } else {\r\n                                        modal.body.find('.paynocchio-spinner').toggleClass('active');\r\n                                        modal.body.find('#withdraw_message')\r\n                                            .text('Something wrong. Please reload page and try again... ' + data.wallet_status);\r\n                                        button.toggleClass('disabled');\r\n                                    }\r\n                                });\r\n                        }\r\n                    });\r\n                });\r\n        });\r\n    }\r\n};"],"names":["checkAvailability","inputVal","balance","parseFloat","_exports","init","paynocchio_wallet_withdraw_button","document","getElementById","addEventListener","showModalWithWithdraw","then","modal","setTitle","input","body","find","button","val","addClass","keyup","evt","target","value","removeClass","click","toggleClass","text","handleWithdrawClick","data","success","window","location","reload","wallet_status"],"mappings":";;;;;;;;AAyBA,MAAMA,kBAAoBA,CAACC,SAAUC,YAGhB,KAAbD,UACyB,IAAzBE,WAAWF,WACXE,WAAWF,UAAYE,WAAWD,UAwDxCE,SAAAC,KAjDmBH,UACjB,MAAMI,kCAAoCC,SAASC,eAAe,8BAE9DF,mCAEAA,kCAAkCG,iBAAiB,SAAS,MACxD,EAAAC,qCACKC,MAAKC,QACFA,MAAMC,SAAS,4BACf,MAAMC,MAAQF,MAAMG,KAAKC,KAAK,oBACxBC,OAASL,MAAMG,KAAKC,KAAK,oBAE3BhB,kBAAkBc,MAAMI,MAAOhB,UAC/Be,OAAOE,SAAS,YAGpBL,MAAMM,OAAMC,MACJrB,kBAAkBqB,IAAIC,OAAOC,MAAOrB,SAGpCe,OAAOO,YAAY,YAFnBP,OAAOE,SAAS,eAMxBF,OAAOQ,OAAM,KACLzB,kBAAkBc,MAAMI,MAAOhB,UAG/Be,OAAOE,SAAS,YAChBP,MAAMG,KAAKC,KAAK,uBAAuBU,YAAY,UACnDd,MAAMG,KAAKC,KAAK,qBAAqBW,KAAK,eAC1C,EAAAC,iCAAoBd,MAAMI,OACrBP,MAAKkB,OACEA,KAAKC,SACLlB,MAAMG,KAAKC,KAAK,uBAAuBU,YAAY,UACnDd,MAAMG,KAAKC,KAAK,qBAAqBW,KAAK,yBAC1CI,OAAOC,SAASC,WAEhBrB,MAAMG,KAAKC,KAAK,uBAAuBU,YAAY,UACnDd,MAAMG,KAAKC,KAAK,qBACXW,KAAK,wDAA0DE,KAAKK,eACzEjB,OAAOS,YAAY,iBAf/Bd,MAAMG,KAAKC,KAAK,qBAAqBW,KAAK,yBAmBhD,GACJ,IAGhB"}