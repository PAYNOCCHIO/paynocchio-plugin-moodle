{"version":3,"file":"wallet_topup.min.js","sources":["../src/wallet_topup.js"],"sourcesContent":["// This file is part of the Paynocchio payments module for Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Paynocchio repository module to encapsulate all of the AJAX requests that can be sent for bank.\n *\n * @module     paygw_paynocchio/repository\n * @copyright  2024 Paynocchio <ceo@paynocchio.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {handleTopUpClick, showModalWithTopup} from \"./repository\";\n\n/**\n * Adapt rewarding rules to sum values of the same rules\n * @param {object} data\n * @return {*[]}\n */\nconst transformRewardingRules = (data) => {\n    const result = [];\n\n    data.forEach(item => {\n        let existing = result.find(el =>\n            el.operation_type === item.operation_type &&\n            el.min_amount === item.min_amount &&\n            el.max_amount === item.max_amount\n        );\n\n        if (existing) {\n            existing.value += item.value;\n        } else {\n            result.push({ ...item });\n        }\n    });\n\n    return result;\n};\n\n/**\n * Find eligible Operations\n * @param {object} obj\n * @param {number} num\n * @param {string} operationType\n * @return {*}\n */\nconst calculateFinalRule = (obj, num, operationType) => {\n    let totalValue = 0;\n    let minAmount = Infinity;\n    let maxAmount = -Infinity;\n\n    obj.forEach(item => {\n        if (item.operation_type === operationType && num > item.min_amount && num < item.max_amount) {\n            totalValue += item.value;\n            if (item.min_amount < minAmount) {\n                minAmount = item.min_amount;\n            }\n            if (item.max_amount > maxAmount) {\n                maxAmount = item.max_amount;\n            }\n        }\n    });\n\n    // Проверка, если ни одно правило не подошло\n    if (totalValue === 0) {\n        return null;\n    }\n\n    return {\n        totalValue,\n        minAmount,\n        maxAmount\n    };\n};\n\nexport const init = (pay, minimum_topup_amount, card_balance_limit, balance, rewarding_rules) => {\n    const reducedRules = transformRewardingRules(rewarding_rules);\n\n    window.console.log(reducedRules);\n\n    // Демо работы фильтра\n    // Replenishment\n    window.console.log(calculateFinalRule(reducedRules, 6, \"payment_operation_add_money\"));\n    window.console.log(calculateFinalRule(reducedRules, 90, \"payment_operation_add_money\"));\n    window.console.log(calculateFinalRule(reducedRules, 103, \"payment_operation_add_money\"));\n    // Payment\n    window.console.log(calculateFinalRule(reducedRules, 90, \"payment_operation_for_services\"));\n    window.console.log(calculateFinalRule(reducedRules, 500, \"payment_operation_for_services\"));\n\n    const paynocchio_wallet_topup_button = document.getElementById('paynocchio_topup_button');\n\n    let need_to_top_up = 0;\n    if(pay && document.getElementById('need_to_top_up')) {\n        need_to_top_up = parseFloat(document.getElementById('need_to_top_up').innerText);\n    } else {\n        need_to_top_up = minimum_topup_amount;\n    }\n\n    if (paynocchio_wallet_topup_button) {\n\n        paynocchio_wallet_topup_button.addEventListener('click', () => {\n            showModalWithTopup(minimum_topup_amount, card_balance_limit)\n                .then(modal => {\n                    modal.setTitle('Topup your Wallet');\n                    const button = modal.body.find('#topup_button');\n                    const input = modal.body.find('#top_up_amount');\n                    const message = modal.body.find('#topup_message');\n                    if(need_to_top_up) {\n                        const top_up_default_input = need_to_top_up <= minimum_topup_amount ? minimum_topup_amount: need_to_top_up;\n                        input.val(top_up_default_input);\n\n                        if(parseInt(need_to_top_up * 0.1) > 0) {\n                            message.text(`You will get ${parseInt(need_to_top_up * 0.1)} bonuses`);\n                        }\n                    }\n                    input.on('keyup change', (evt) => {\n                        if (parseFloat(evt.target.value) + balance > card_balance_limit) {\n                            message.text(`When replenishing the amount ${evt.target.value}, \n                            the balance limit will exceed the set value ${card_balance_limit}`);\n                            button.addClass('disabled');\n                        } else if (evt.target.value >= minimum_topup_amount) {\n                            message.text(`You will get ${parseInt(parseInt(evt.target.value) * 0.1)} bonuses`);\n                            button.removeClass('disabled');\n                        } else {\n                            message.text('Please enter amount more than minimum replenishment amount.');\n                            button.addClass('disabled');\n                        }\n                    });\n\n                    button.click(() => {\n                        if (input.val()) {\n                            button.addClass('disabled');\n                            modal.body.find('.paynocchio-spinner').toggleClass('active');\n                            modal.body.find('#topup_message').text('Working...');\n\n                            let redirectLink = window.location.href;\n                            let regex = new RegExp('[?&](success=)[^&]+');\n                            redirectLink = redirectLink.replace( regex , '');\n                            if (redirectLink.indexOf('?') != -1) {\n                                redirectLink = redirectLink + '&success=1';\n                            } else {\n                                redirectLink = redirectLink + '?success=1';\n                            }\n\n                            handleTopUpClick(input.val(), redirectLink)\n                                .then(data => {\n                                    if (!data.is_error && data.url) {\n                                        modal.body.find('#topup_message').text('OK... Sending to Stripe...');\n                                        window.location.replace(data.url);\n                                    } else {\n                                        modal.body.find('.paynocchio-spinner').toggleClass('active');\n                                        modal.body.find('#topup_message')\n                                            .text(data.message);\n                                        button.toggleClass('disabled');\n                                    }\n                                });\n                        }\n                    });\n                });\n        });\n    }\n};"],"names":["calculateFinalRule","obj","num","operationType","totalValue","minAmount","Infinity","maxAmount","forEach","item","operation_type","min_amount","max_amount","value","pay","minimum_topup_amount","card_balance_limit","balance","rewarding_rules","reducedRules","data","result","existing","find","el","push","transformRewardingRules","window","console","log","paynocchio_wallet_topup_button","document","getElementById","need_to_top_up","parseFloat","innerText","addEventListener","then","modal","setTitle","button","body","input","message","top_up_default_input","val","parseInt","text","on","evt","target","addClass","removeClass","click","toggleClass","redirectLink","location","href","regex","RegExp","replace","indexOf","is_error","url"],"mappings":"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"}