{"version":3,"file":"wallet_topup.min.js","sources":["../src/wallet_topup.js"],"sourcesContent":["// This file is part of the Paynocchio payments module for Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Paynocchio repository module to encapsulate all of the AJAX requests that can be sent for bank.\n *\n * @module     paygw_paynocchio/repository\n * @copyright  2024 Paynocchio <ceo@paynocchio.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {handleTopUpClick, showModalWithTopup, calculateReward} from \"./repository\";\n\nlet debounceTimer;\nconst debounceTime = 300;\n\nconst debounce = (callback, time) => {\n    window.clearTimeout(debounceTimer);\n    debounceTimer = window.setTimeout(callback, time);\n};\n\nexport const init = (pay, minimum_topup_amount, card_balance_limit, balance) => {\n\n    const paynocchio_wallet_topup_button = document.getElementById('paynocchio_topup_button');\n\n    let need_to_top_up = 0;\n    if(pay && document.getElementById('need_to_top_up')) {\n        need_to_top_up = parseFloat(document.getElementById('need_to_top_up').innerText);\n    } else {\n        need_to_top_up = minimum_topup_amount;\n    }\n\n    if (paynocchio_wallet_topup_button) {\n\n        paynocchio_wallet_topup_button.addEventListener('click', () => {\n            showModalWithTopup(minimum_topup_amount, card_balance_limit)\n                .then(modal => {\n                    modal.setTitle('Topup your Wallet');\n                    const button = modal.body.find('#topup_button');\n                    const input = modal.body.find('#top_up_amount');\n                    const message = modal.body.find('#topup_message');\n                    const commission_message = modal.body.find('#commission_message');\n                    if(need_to_top_up) {\n                        const top_up_default_input = need_to_top_up <= minimum_topup_amount ? minimum_topup_amount: need_to_top_up;\n                        input.val(top_up_default_input);\n\n                        calculateReward(top_up_default_input, 'payment_operation_add_money')\n                            .then(rewards => {\n                                window.console.log(rewards);\n                                if(rewards.bonuses_to_get > 0) {\n                                    message.text(`You will get ${rewards.bonuses_to_get} bonuses`);\n                                    commission_message.text(`You will receive $${rewards.sum_without_commission}`);\n                                }\n                            });\n                    }\n                    input.on('keyup change', (evt) => {\n                        if (parseFloat(evt.target.value) + balance > card_balance_limit) {\n                            message.text(`When replenishing the amount ${evt.target.value}, \n                            the balance limit will exceed the set value ${card_balance_limit}`);\n                            button.addClass('disabled');\n                        } else if (evt.target.value >= minimum_topup_amount) {\n                            commission_message.addClass('loading');\n                            debounce(() => {\n                                calculateReward(evt.target.value, 'payment_operation_add_money')\n                                    .then(rewards => {\n                                        window.console.log(rewards);\n                                        if(rewards.bonuses_to_get > 0) {\n                                            message.text(`You will get ${rewards.bonuses_to_get} bonuses`);\n                                            commission_message.text(\n                                                `You will receive $${rewards.sum_without_commission}.`\n                                            );\n                                        } else {\n                                            message.text('');\n                                            commission_message.text('');\n                                        }\n                                        commission_message.removeClass('loading');\n                                    });\n                            }, debounceTime);\n\n                            button.removeClass('disabled');\n                        } else {\n                            message.text('Please enter amount more than minimum replenishment amount.');\n                            button.addClass('disabled');\n                        }\n                    });\n\n                    button.click(() => {\n                        if (input.val()) {\n                            button.addClass('disabled');\n                            modal.body.find('.paynocchio-spinner').toggleClass('active');\n                            modal.body.find('#topup_message').text('Working...');\n\n                            let redirectLink = window.location.href;\n                            let regex = new RegExp('[?&](success=)[^&]+');\n                            redirectLink = redirectLink.replace( regex , '');\n                            if (redirectLink.indexOf('?') != -1) {\n                                redirectLink = redirectLink + '&success=1';\n                            } else {\n                                redirectLink = redirectLink + '?success=1';\n                            }\n\n                            handleTopUpClick(input.val(), redirectLink)\n                                .then(data => {\n                                    if (!data.is_error && data.url) {\n                                        modal.body.find('#topup_message').text('OK... Sending to Stripe...');\n                                        window.location.replace(data.url);\n                                    } else {\n                                        modal.body.find('.paynocchio-spinner').toggleClass('active');\n                                        modal.body.find('#topup_message')\n                                            .text(data.message);\n                                        button.toggleClass('disabled');\n                                    }\n                                });\n                        }\n                    });\n                });\n        });\n    }\n};"],"names":["debounceTimer","pay","minimum_topup_amount","card_balance_limit","balance","paynocchio_wallet_topup_button","document","getElementById","need_to_top_up","parseFloat","innerText","addEventListener","then","modal","setTitle","button","body","find","input","message","commission_message","top_up_default_input","val","rewards","window","console","log","bonuses_to_get","text","sum_without_commission","on","evt","callback","time","target","value","addClass","removeClass","clearTimeout","setTimeout","click","toggleClass","redirectLink","location","href","regex","RegExp","replace","indexOf","data","is_error","url"],"mappings":";;;;;;;;IAyBIA,yGAQgB,CAACC,IAAKC,qBAAsBC,mBAAoBC,iBAE1DC,+BAAiCC,SAASC,eAAe,+BAE3DC,eAAiB,EAEjBA,eADDP,KAAOK,SAASC,eAAe,kBACbE,WAAWH,SAASC,eAAe,kBAAkBG,WAErDR,qBAGjBG,gCAEAA,+BAA+BM,iBAAiB,SAAS,wCAClCT,qBAAsBC,oBACpCS,MAAKC,QACFA,MAAMC,SAAS,2BACTC,OAASF,MAAMG,KAAKC,KAAK,iBACzBC,MAAQL,MAAMG,KAAKC,KAAK,kBACxBE,QAAUN,MAAMG,KAAKC,KAAK,kBAC1BG,mBAAqBP,MAAMG,KAAKC,KAAK,0BACxCT,eAAgB,OACTa,qBAAuBb,gBAAkBN,qBAAuBA,qBAAsBM,eAC5FU,MAAMI,IAAID,sDAEMA,qBAAsB,+BACjCT,MAAKW,UACFC,OAAOC,QAAQC,IAAIH,SAChBA,QAAQI,eAAiB,IACxBR,QAAQS,KAAM,gBAAeL,QAAQI,0BACrCP,mBAAmBQ,KAAM,qBAAoBL,QAAQM,8BAIrEX,MAAMY,GAAG,gBAAiBC,MAvC7B,IAACC,SAAUC,KAwCAxB,WAAWsB,IAAIG,OAAOC,OAAS/B,QAAUD,oBACzCgB,QAAQS,KAAM,gCAA+BG,IAAIG,OAAOC,oFACVhC,sBAC9CY,OAAOqB,SAAS,aACTL,IAAIG,OAAOC,OAASjC,sBAC3BkB,mBAAmBgB,SAAS,WA7CtCJ,SA8CmB,qCACWD,IAAIG,OAAOC,MAAO,+BAC7BvB,MAAKW,UACFC,OAAOC,QAAQC,IAAIH,SAChBA,QAAQI,eAAiB,GACxBR,QAAQS,KAAM,gBAAeL,QAAQI,0BACrCP,mBAAmBQ,KACd,qBAAoBL,QAAQM,6BAGjCV,QAAQS,KAAK,IACbR,mBAAmBQ,KAAK,KAE5BR,mBAAmBiB,YAAY,eA3D3CJ,KAFP,IAGjBT,OAAOc,aAAatC,eACpBA,cAAgBwB,OAAOe,WAAWP,SAAUC,MA6DpBlB,OAAOsB,YAAY,cAEnBlB,QAAQS,KAAK,+DACbb,OAAOqB,SAAS,gBAIxBrB,OAAOyB,OAAM,QACLtB,MAAMI,MAAO,CACbP,OAAOqB,SAAS,YAChBvB,MAAMG,KAAKC,KAAK,uBAAuBwB,YAAY,UACnD5B,MAAMG,KAAKC,KAAK,kBAAkBW,KAAK,kBAEnCc,aAAelB,OAAOmB,SAASC,KAC/BC,MAAQ,IAAIC,OAAO,uBACvBJ,aAAeA,aAAaK,QAASF,MAAQ,KACX,GAA9BH,aAAaM,QAAQ,KACrBN,cAA8B,aAE9BA,cAA8B,8CAGjBxB,MAAMI,MAAOoB,cACzB9B,MAAKqC,QACGA,KAAKC,UAAYD,KAAKE,KACvBtC,MAAMG,KAAKC,KAAK,kBAAkBW,KAAK,8BACvCJ,OAAOmB,SAASI,QAAQE,KAAKE,OAE7BtC,MAAMG,KAAKC,KAAK,uBAAuBwB,YAAY,UACnD5B,MAAMG,KAAKC,KAAK,kBACXW,KAAKqB,KAAK9B,SACfJ,OAAO0B,YAAY"}