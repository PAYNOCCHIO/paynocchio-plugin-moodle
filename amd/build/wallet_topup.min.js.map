{"version":3,"file":"wallet_topup.min.js","sources":["../src/wallet_topup.js"],"sourcesContent":["// This file is part of the Paynocchio payments module for Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Paynocchio repository module to encapsulate all of the AJAX requests that can be sent for bank.\n *\n * @module     paygw_paynocchio/repository\n * @copyright  2024 Paynocchio <ceo@paynocchio.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {handleTopUpClick, showModalWithTopup, calculateReward} from \"./repository\";\n\nlet debounceTimer;\nconst debounceTime = 300;\n\nconst debounce = (callback, time) => {\n    window.clearTimeout(debounceTimer);\n    debounceTimer = window.setTimeout(callback, time);\n};\n\nexport const init = (pay, minimum_topup_amount, card_balance_limit, balance, cost, topupamount) => {\n\n    const paynocchio_wallet_topup_button = document.getElementById('paynocchio_topup_button');\n\n    if (paynocchio_wallet_topup_button) {\n\n        paynocchio_wallet_topup_button.addEventListener('click', () => {\n            showModalWithTopup(minimum_topup_amount, card_balance_limit, cost, topupamount)\n                .then(modal => {\n                    modal.setTitle('Topup your Wallet');\n                    const button = modal.body.find('#topup_button');\n                    const input = modal.body.find('#top_up_amount');\n                    const message = modal.body.find('#topup_message');\n                    const commission_message = modal.body.find('#commission_message');\n\n                    if(cost) {\n                        debounce(() => {\n                            calculateReward(cost, 'payment_operation_add_money')\n                                .then(rewards => {\n                                    if(rewards.bonuses_to_get > 0) {\n                                        message.text(`You will get ${rewards.bonuses_to_get} bonuses`);\n                                        commission_message.text(\n                                            `You will receive $${rewards.sum_without_commission}. \n                                                Commission: $${rewards.commission}`\n                                        );\n                                    } else {\n                                        message.text('');\n                                        commission_message.text('');\n                                    }\n                                    commission_message.removeClass('loading');\n                                });\n                        }, debounceTime);\n                    }\n\n                    input.on('keyup change', (evt) => {\n                        const inputValue = parseFloat(evt.target.value);\n                        if (inputValue + balance > card_balance_limit) {\n                            message.text(`When replenishing the amount ${inputValue}, \n                            the balance limit will exceed the set value ${card_balance_limit}`);\n                            button.addClass('disabled');\n                        } else if (inputValue >= minimum_topup_amount) {\n                            commission_message.addClass('loading');\n                            debounce(() => {\n                                calculateReward(inputValue, 'payment_operation_add_money')\n                                    .then(rewards => {\n                                        if(rewards.bonuses_to_get > 0) {\n                                            message.text(`You will get ${rewards.bonuses_to_get} bonuses`);\n                                            commission_message.text(\n                                                `You will receive $${rewards.sum_without_commission}. \n                                                Commission: $${rewards.commission}`\n                                            );\n                                        } else {\n                                            message.text('');\n                                            commission_message.text('');\n                                        }\n                                        commission_message.removeClass('loading');\n                                    });\n                            }, debounceTime);\n\n                            button.removeClass('disabled');\n                        } else {\n                            message.text('Please enter amount more than minimum replenishment amount.');\n                            commission_message.text('');\n                            button.addClass('disabled');\n                        }\n                    });\n\n                    button.click(() => {\n                        if (input.val()) {\n                            button.addClass('disabled');\n                            modal.body.find('.paynocchio-spinner').toggleClass('active');\n                            modal.body.find('#topup_message').text('Working...');\n\n                            let redirectLink = window.location.href;\n                            let regex = new RegExp('[?&](success=)[^&]+');\n                            redirectLink = redirectLink.replace( regex , '');\n                            if (redirectLink.indexOf('?') != -1) {\n                                redirectLink = redirectLink + '&success=1';\n                            } else {\n                                redirectLink = redirectLink + '?success=1';\n                            }\n\n                            handleTopUpClick(input.val(), redirectLink)\n                                .then(data => {\n                                    if (!data.is_error && data.url) {\n                                        modal.body.find('#topup_message').text('OK... Sending to Stripe...');\n                                        window.location.replace(data.url);\n                                    } else {\n                                        modal.body.find('.paynocchio-spinner').toggleClass('active');\n                                        modal.body.find('#topup_message')\n                                            .text(data.message);\n                                        button.toggleClass('disabled');\n                                    }\n                                });\n                        }\n                    });\n                });\n        });\n    }\n};"],"names":["debounceTimer","debounce","callback","time","window","clearTimeout","setTimeout","pay","minimum_topup_amount","card_balance_limit","balance","cost","topupamount","paynocchio_wallet_topup_button","document","getElementById","addEventListener","then","modal","setTitle","button","body","find","input","message","commission_message","rewards","bonuses_to_get","text","sum_without_commission","commission","removeClass","on","evt","inputValue","parseFloat","target","value","addClass","click","val","toggleClass","redirectLink","location","href","regex","RegExp","replace","indexOf","data","is_error","url"],"mappings":";;;;;;;;IAyBIA,iGAGEC,SAAW,CAACC,SAAUC,QACxBC,OAAOC,aAAaL,eACpBA,cAAgBI,OAAOE,WAAWJ,SAAUC,qBAG5B,CAACI,IAAKC,qBAAsBC,mBAAoBC,QAASC,KAAMC,qBAEzEC,+BAAiCC,SAASC,eAAe,2BAE3DF,gCAEAA,+BAA+BG,iBAAiB,SAAS,wCAClCR,qBAAsBC,mBAAoBE,KAAMC,aAC9DK,MAAKC,QACFA,MAAMC,SAAS,2BACTC,OAASF,MAAMG,KAAKC,KAAK,iBACzBC,MAAQL,MAAMG,KAAKC,KAAK,kBACxBE,QAAUN,MAAMG,KAAKC,KAAK,kBAC1BG,mBAAqBP,MAAMG,KAAKC,KAAK,uBAExCX,MACCV,UAAS,qCACWU,KAAM,+BACjBM,MAAKS,UACCA,QAAQC,eAAiB,GACxBH,QAAQI,KAAM,gBAAeF,QAAQC,0BACrCF,mBAAmBG,KACd,qBAAoBF,QAAQG,0FACVH,QAAQI,gBAG/BN,QAAQI,KAAK,IACbH,mBAAmBG,KAAK,KAE5BH,mBAAmBM,YAAY,gBApC9C,KAyCDR,MAAMS,GAAG,gBAAiBC,YAChBC,WAAaC,WAAWF,IAAIG,OAAOC,OACrCH,WAAaxB,QAAUD,oBACvBe,QAAQI,KAAM,gCAA+BM,yFACCzB,sBAC9CW,OAAOkB,SAAS,aACTJ,YAAc1B,sBACrBiB,mBAAmBa,SAAS,WAC5BrC,UAAS,qCACWiC,WAAY,+BACvBjB,MAAKS,UACCA,QAAQC,eAAiB,GACxBH,QAAQI,KAAM,gBAAeF,QAAQC,0BACrCF,mBAAmBG,KACd,qBAAoBF,QAAQG,0FACdH,QAAQI,gBAG3BN,QAAQI,KAAK,IACbH,mBAAmBG,KAAK,KAE5BH,mBAAmBM,YAAY,gBA9DlD,KAkEOX,OAAOW,YAAY,cAEnBP,QAAQI,KAAK,+DACbH,mBAAmBG,KAAK,IACxBR,OAAOkB,SAAS,gBAIxBlB,OAAOmB,OAAM,QACLhB,MAAMiB,MAAO,CACbpB,OAAOkB,SAAS,YAChBpB,MAAMG,KAAKC,KAAK,uBAAuBmB,YAAY,UACnDvB,MAAMG,KAAKC,KAAK,kBAAkBM,KAAK,kBAEnCc,aAAetC,OAAOuC,SAASC,KAC/BC,MAAQ,IAAIC,OAAO,uBACvBJ,aAAeA,aAAaK,QAASF,MAAQ,KACX,GAA9BH,aAAaM,QAAQ,KACrBN,cAA8B,aAE9BA,cAA8B,8CAGjBnB,MAAMiB,MAAOE,cACzBzB,MAAKgC,QACGA,KAAKC,UAAYD,KAAKE,KACvBjC,MAAMG,KAAKC,KAAK,kBAAkBM,KAAK,8BACvCxB,OAAOuC,SAASI,QAAQE,KAAKE,OAE7BjC,MAAMG,KAAKC,KAAK,uBAAuBmB,YAAY,UACnDvB,MAAMG,KAAKC,KAAK,kBACXM,KAAKqB,KAAKzB,SACfJ,OAAOqB,YAAY"}