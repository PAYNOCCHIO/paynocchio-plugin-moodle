{"version":3,"file":"paynocchio_pay.min.js","sources":["../src/paynocchio_pay.js"],"sourcesContent":["// This file is part of the Paynocchio payments module for Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {makePayment} from \"./repository\";\nimport {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\n\n/**\n * Paynocchio repository module to encapsulate all of the AJAX requests that can be sent for bank.\n *\n * @module     paygw_paynocchio/repository\n * @copyright  2024 Paynocchio <ceo@paynocchio.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst checkPayability = (value, fullAmount, balance = '0', element) => {\n    if(parseFloat(value)+parseFloat(balance) < parseFloat(fullAmount)) {\n        element.classList.add('disabled');\n        document.getElementById('topup_message').innerText = 'Please top up or use your Bonuses.';\n    } else {\n        element.classList.remove('disabled');\n        document.getElementById('topup_message').innerText = '';\n    }\n};\n\nexport const init = (component, paymentArea, itemid, fullAmount, balance) => {\n\n    const paynocchio_pay_button = document.getElementById('paynocchio_pay_button');\n\n    if (paynocchio_pay_button) {\n\n        const range = document.getElementById('bonuses-range');\n        const input = document.getElementById('bonuses-value');\n        let bonuses = 0;\n        if(input) {\n            bonuses = parseFloat(input.value);\n        }\n\n        if(range && input) {\n            checkPayability(bonuses, fullAmount, balance, paynocchio_pay_button);\n\n            input.addEventListener('change', () => {\n                range.value = bonuses;\n            });\n            range.addEventListener('change', () => {\n                bonuses = range.value;\n                checkPayability(bonuses, fullAmount, balance, paynocchio_pay_button);\n            });\n            range.addEventListener('input', () => {\n                bonuses = range.value;\n                checkPayability(bonuses, fullAmount, balance, paynocchio_pay_button);\n            });\n        } else {\n            checkPayability(0, fullAmount, balance, paynocchio_pay_button);\n        }\n\n        paynocchio_pay_button.addEventListener('click', () => {\n\n            const spinner = document.querySelector('.paynocchio-spinner');\n            const topup_message = document.getElementById('topup_message');\n\n            if(bonuses + balance < fullAmount) {\n                topup_message.innerText = 'Sorry, but no';\n                return;\n            }\n\n            paynocchio_pay_button.classList.add('disabled');\n\n            spinner.classList.add('active');\n            makePayment(component, paymentArea, itemid, fullAmount, bonuses)\n                .then(data => {\n                    if(data.success) {\n                        spinner.classList.remove('active');\n                        topup_message.innerText = 'Success';\n                        window.location.reload();\n                        Templates.renderForPromise('paygw_paynocchio/enrolled_already', [])\n                            .then(({html, js}) => {\n                                Templates.replaceNodeContents('.paynocchio-profile-block', html, js);\n                            })\n                            .catch((error) => displayException(error));\n                    } else {\n                        window.console.log(data);\n                    }\n                });\n        });\n    }\n};\n"],"names":["checkPayability","value","fullAmount","balance","element","parseFloat","classList","add","document","getElementById","innerText","remove","component","paymentArea","itemid","paynocchio_pay_button","range","input","bonuses","addEventListener","spinner","querySelector","topup_message","then","data","success","window","location","reload","renderForPromise","_ref","html","js","replaceNodeContents","catch","error","console","log"],"mappings":";;;;;;;sJA2BMA,gBAAkB,SAACC,MAAOC,gBAAYC,+DAAU,IAAKC,+CACpDC,WAAWJ,OAAOI,WAAWF,SAAWE,WAAWH,aAClDE,QAAQE,UAAUC,IAAI,YACtBC,SAASC,eAAe,iBAAiBC,UAAY,uCAErDN,QAAQE,UAAUK,OAAO,YACzBH,SAASC,eAAe,iBAAiBC,UAAY,mBAIzC,CAACE,UAAWC,YAAaC,OAAQZ,WAAYC,iBAEvDY,sBAAwBP,SAASC,eAAe,4BAElDM,sBAAuB,OAEjBC,MAAQR,SAASC,eAAe,iBAChCQ,MAAQT,SAASC,eAAe,qBAClCS,QAAU,EACXD,QACCC,QAAUb,WAAWY,MAAMhB,QAG5Be,OAASC,OACRjB,gBAAgBkB,QAAShB,WAAYC,QAASY,uBAE9CE,MAAME,iBAAiB,UAAU,KAC7BH,MAAMf,MAAQiB,WAElBF,MAAMG,iBAAiB,UAAU,KAC7BD,QAAUF,MAAMf,MAChBD,gBAAgBkB,QAAShB,WAAYC,QAASY,0BAElDC,MAAMG,iBAAiB,SAAS,KAC5BD,QAAUF,MAAMf,MAChBD,gBAAgBkB,QAAShB,WAAYC,QAASY,2BAGlDf,gBAAgB,EAAGE,WAAYC,QAASY,uBAG5CA,sBAAsBI,iBAAiB,SAAS,WAEtCC,QAAUZ,SAASa,cAAc,uBACjCC,cAAgBd,SAASC,eAAe,iBAE3CS,QAAUf,QAAUD,WACnBoB,cAAcZ,UAAY,iBAI9BK,sBAAsBT,UAAUC,IAAI,YAEpCa,QAAQd,UAAUC,IAAI,sCACVK,UAAWC,YAAaC,OAAQZ,WAAYgB,SACnDK,MAAKC,OACCA,KAAKC,SACJL,QAAQd,UAAUK,OAAO,UACzBW,cAAcZ,UAAY,UAC1BgB,OAAOC,SAASC,4BACNC,iBAAiB,oCAAqC,IAC3DN,MAAKO,WAACC,KAACA,KAADC,GAAOA,4BACAC,oBAAoB,4BAA6BF,KAAMC,OAEpEE,OAAOC,QAAU,2BAAiBA,UAEvCT,OAAOU,QAAQC,IAAIb"}