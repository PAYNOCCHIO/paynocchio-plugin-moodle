{"version":3,"file":"paynocchio_pay.min.js","sources":["../src/paynocchio_pay.js"],"sourcesContent":["// This file is part of the Paynocchio payments module for Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {makePayment} from \"./repository\";\nimport {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\n\n/**\n * Paynocchio repository module to encapsulate all of the AJAX requests that can be sent for bank.\n *\n * @module     paygw_paynocchio/repository\n * @copyright  2024 Paynocchio <ceo@paynocchio.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport const init = (component, paymentArea, itemid, fullAmount) => {\n\n    const paynocchio_pay_button = document.getElementById('paynocchio_pay_button');\n\n    if (paynocchio_pay_button) {\n\n        const range = document.getElementById('bonuses-range');\n        const input = document.getElementById('bonuses-value');\n\n        input.addEventListener('change', () => {\n            range.value = input.value;\n        });\n        range.addEventListener('change', () => {\n            input.value = range.value;\n        });\n        range.addEventListener('input', () => {\n            input.value = range.value;\n        });\n\n        paynocchio_pay_button.addEventListener('click', () => {\n            paynocchio_pay_button.classList.add('disabled');\n\n            const bonuses = parseFloat(document.getElementById('bonuses-value').value);\n            const spinner = document.querySelector('.paynocchio-spinner');\n            const topup_message = document.getElementById('topup_message');\n\n            spinner.classList.add('active');\n            makePayment(component, paymentArea, itemid, fullAmount, bonuses)\n                .then(data => {\n                    if(data.success) {\n                        spinner.classList.remove('active');\n                        topup_message.innerText = 'Success';\n                        Templates.renderForPromise('paygw_paynocchio/enrolled_already', [])\n                            .then(({html, js}) => {\n                                Templates.replaceNodeContents('.paynocchio-profile-block', html, js);\n                            })\n                            .catch((error) => displayException(error));\n                    }\n                });\n        });\n    }\n};"],"names":["component","paymentArea","itemid","fullAmount","paynocchio_pay_button","document","getElementById","range","input","addEventListener","value","classList","add","bonuses","parseFloat","spinner","querySelector","topup_message","then","data","success","remove","innerText","renderForPromise","_ref","html","js","replaceNodeContents","catch","error"],"mappings":";;;;;;;8JA2BoB,CAACA,UAAWC,YAAaC,OAAQC,oBAE3CC,sBAAwBC,SAASC,eAAe,4BAElDF,sBAAuB,OAEjBG,MAAQF,SAASC,eAAe,iBAChCE,MAAQH,SAASC,eAAe,iBAEtCE,MAAMC,iBAAiB,UAAU,KAC7BF,MAAMG,MAAQF,MAAME,SAExBH,MAAME,iBAAiB,UAAU,KAC7BD,MAAME,MAAQH,MAAMG,SAExBH,MAAME,iBAAiB,SAAS,KAC5BD,MAAME,MAAQH,MAAMG,SAGxBN,sBAAsBK,iBAAiB,SAAS,KAC5CL,sBAAsBO,UAAUC,IAAI,kBAE9BC,QAAUC,WAAWT,SAASC,eAAe,iBAAiBI,OAC9DK,QAAUV,SAASW,cAAc,uBACjCC,cAAgBZ,SAASC,eAAe,iBAE9CS,QAAQJ,UAAUC,IAAI,sCACVZ,UAAWC,YAAaC,OAAQC,WAAYU,SACnDK,MAAKC,OACCA,KAAKC,UACJL,QAAQJ,UAAUU,OAAO,UACzBJ,cAAcK,UAAY,6BAChBC,iBAAiB,oCAAqC,IAC3DL,MAAKM,WAACC,KAACA,KAADC,GAAOA,4BACAC,oBAAoB,4BAA6BF,KAAMC,OAEpEE,OAAOC,QAAU,2BAAiBA"}