{"version":3,"file":"repository.min.js","sources":["../src/repository.js"],"sourcesContent":["// This file is part of the Paynocchio payments module for Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Paynocchio repository module to encapsulate all of the AJAX requests that can be sent for bank.\n *\n * @module     paygw_paynocchio/repository\n * @copyright  2024 Paynocchio <ceo@paynocchio.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport Modal from 'core/modal';\n\n/**\n * Return the Paynocchio JavaScript SDK URL.\n *\n * @param {string} component Name of the component that the itemId belongs to\n * @param {string} paymentArea The area of the component that the itemId belongs to\n * @param {number} itemId An internal identifier that is used by the component\n * @returns {Promise<{clientid: string, brandname: string, cost: number, currency: string}>}\n */\nexport const getConfigForJs = (component, paymentArea, itemId) => {\n    const request = {\n        methodname: 'paygw_paynocchio_get_config_for_js',\n        args: {\n            component,\n            paymentarea: paymentArea,\n            itemid: itemId,\n        },\n    };\n\n    return Ajax.call([request])[0];\n};\n\nexport const handleWalletActivationClick = async (user_id) => {\n    const request = {\n        methodname: 'paygw_paynocchio_activate_wallet',\n        args: {\n            userId: user_id,\n        },\n    };\n\n    return await Ajax.call([request])[0];\n};\n\nexport const handleTopUpClick = async (amount, redirect_url) => {\n    const request = {\n        methodname: 'paygw_paynocchio_topup_wallet',\n        args: {\n            amount,\n            redirect_url: redirect_url,\n        },\n    };\n\n    return await Ajax.call([request])[0];\n};\n\nexport const handleWithdrawClick = async (amount) => {\n    const request = {\n        methodname: 'paygw_paynocchio_withdraw_from_wallet',\n        args: {\n            amount,\n        },\n    };\n\n    return await Ajax.call([request])[0];\n};\n\n/**\n * Suspend wallet\n * @param {text} $status\n * @return {Promise<*>}\n */\nexport const handleStatusButtonClick = async ($status) => {\n    const request = {\n        methodname: 'paygw_paynocchio_update_wallet_status',\n        args: {\n            status: $status,\n        },\n    };\n\n    return await Ajax.call([request])[0];\n};\n\n/**\n * Delete wallet\n * @param {string} wallet_uuid\n * @return {Promise<*>}\n */\nexport const handleDeleteButtonClick = async (wallet_uuid) => {\n    const request = {\n        methodname: 'paygw_paynocchio_delete_wallet',\n        args: {\n            wallet_uuid: wallet_uuid,\n        },\n    };\n\n    return await Ajax.call([request])[0];\n};\n\n/**\n * Creates and shows a modal that contains a placeholder.\n *\n * @param {string} minimum_topup_amount\n * @param {string} card_balance_limit\n * @returns {Promise<Modal>}\n */\nexport const showModalWithTopup = async(minimum_topup_amount, card_balance_limit) => await Modal.create({\n    body: await Templates.render('paygw_paynocchio/topup_modal', {minimum_topup_amount, card_balance_limit }),\n    show: true,\n    removeOnClose: true,\n});\n\n/**\n * Creates and shows a modal that contains a withdrawal form.\n *\n * @returns {Promise<Modal>}\n */\nexport const showModalWithWithdraw = async() => await Modal.create({\n    body: await Templates.render('paygw_paynocchio/withdraw_modal', {}),\n    show: true,\n    removeOnClose: true,\n});\n\n/**\n * Creates and shows a modal that contains a withdrawal form.\n * @returns {Promise<Modal>}\n */\nexport const showModalWithTerms = async() => await Modal.create({\n    show: true,\n    removeOnClose: true,\n    large: true,\n});\n\n/**\n * Creates and shows a modal that contains a withdrawal form.\n * @returns {Promise<Modal>}\n */\nexport const showModalWithPrivacy = async() => await Modal.create({\n    show: true,\n    removeOnClose: true,\n    large: true,\n});\n\n/**\n * Creates and shows a modal that contains a Suspension form.\n *\n * @returns {Promise<Modal>}\n */\nexport const showSuspendModal = async() => await Modal.create({\n    title: 'Suspend your Wallet',\n    body: await Templates.render('paygw_paynocchio/suspend_modal', {}),\n    show: true,\n    removeOnClose: true,\n});\n\n/**\n * Creates and shows a modal that contains a Suspension form.\n *\n * @returns {Promise<Modal>}\n */\nexport const showBlockModal = async() => await Modal.create({\n    title: 'Block your Wallet',\n    body: await Templates.render('paygw_paynocchio/block_modal', {}),\n    show: true,\n    removeOnClose: true,\n});\n\n/**\n * Creates and shows a modal that contains a Suspension form.\n *\n * @returns {Promise<Modal>}\n */\nexport const showDeleteModal = async() => await Modal.create({\n    title: 'Delete your Wallet',\n    body: await Templates.render('paygw_paynocchio/delete_modal', {}),\n    show: true,\n    type: 'Delete',\n    removeOnClose: true,\n});\n\n/**\n * Creates and shows a modal that contains a placeholder.\n *\n * @returns {Promise<Modal>}\n */\nexport const showModalWallet = async() => await Modal.create({\n    body: await Templates.render('paygw_paynocchio/paynocchio_wallet', {}),\n    show: true,\n    removeOnClose: true,\n});\n\n/**\n * Creates and shows a modal that contains a placeholder.\n *\n * @returns {Promise<Modal>}\n */\nexport const showModalWithPlaceholder = async() => {\n    const modal = await Modal.create({\n        title: 'Redirecting...',\n        body: await Templates.render('paygw_paynocchio/paynocchio_placeholder', {})\n    });\n    modal.show();\n};\n\n/**\n * Call server to validate and capture payment for order.\n *\n * @param {string} component Name of the component that the itemId belongs to\n * @param {string} paymentArea The area of the component that the itemId belongs to\n * @param {string} description The area of the component that the itemId belongs to\n * @param {number} itemid An internal identifier that is used by the component\n * @param {number} fullAmount Full amount of the order\n * @param {number} bonuses Boneses used to pay Paynocchio\n * @returns {*}\n */\nexport const makePayment = (component, paymentArea, description, itemid, fullAmount, bonuses) => {\n    const request = {\n        methodname: 'paygw_paynocchio_make_payment',\n        args: {\n            component,\n            paymentarea: paymentArea,\n            description,\n            itemid,\n            fullAmount,\n            bonuses\n        },\n    };\n\n    return Ajax.call([request])[0];\n};\n\n/**\n * Call server to check if payment was confirmed.\n *\n * @param {number} paymentid id of the Payment to check\n * @returns {*}\n */\nexport const checkPaymentConfirmation = (paymentid) => {\n    const request = {\n        methodname: 'paygw_paynocchio_check_payment_confirmation',\n        args: {\n            paymentid\n        },\n    };\n\n    return Ajax.call([request])[0];\n};\n\n/**\n * Call server to get conf.\n *\n * @param {string} conf_name Name of the conf\n * @returns {*}\n */\nexport const getConf = (conf_name) => {\n    const request = {\n        methodname: 'paygw_paynocchio_get_conf',\n        args: {\n            conf_name,\n        },\n    };\n\n    return Ajax.call([request])[0];\n};"],"names":["component","paymentArea","itemId","request","methodname","args","paymentarea","itemid","Ajax","call","async","userId","user_id","amount","redirect_url","status","$status","wallet_uuid","minimum_topup_amount","card_balance_limit","Modal","create","body","Templates","render","show","removeOnClose","large","title","type","description","fullAmount","bonuses","paymentid","conf_name"],"mappings":";;;;;;;6sBAmC8B,CAACA,UAAWC,YAAaC,gBAC7CC,QAAU,CACZC,WAAY,qCACZC,KAAM,CACFL,UAAAA,UACAM,YAAaL,YACbM,OAAQL,gBAITM,cAAKC,KAAK,CAACN,UAAU,yCAGWO,MAAAA,gBACjCP,QAAU,CACZC,WAAY,mCACZC,KAAM,CACFM,OAAQC,uBAIHJ,cAAKC,KAAK,CAACN,UAAU,8BAGNO,MAAOG,OAAQC,sBACrCX,QAAU,CACZC,WAAY,gCACZC,KAAM,CACFQ,OAAAA,OACAC,aAAcA,4BAITN,cAAKC,KAAK,CAACN,UAAU,iCAGHO,MAAAA,eACzBP,QAAU,CACZC,WAAY,wCACZC,KAAM,CACFQ,OAAAA,sBAIKL,cAAKC,KAAK,CAACN,UAAU,qCAQCO,MAAAA,gBAC7BP,QAAU,CACZC,WAAY,wCACZC,KAAM,CACFU,OAAQC,uBAIHR,cAAKC,KAAK,CAACN,UAAU,qCAQCO,MAAAA,oBAC7BP,QAAU,CACZC,WAAY,iCACZC,KAAM,CACFY,YAAaA,2BAIRT,cAAKC,KAAK,CAACN,UAAU,gCAUJO,MAAMQ,qBAAsBC,2BAA6BC,eAAMC,OAAO,CACpGC,WAAYC,mBAAUC,OAAO,+BAAgC,CAACN,qBAAAA,qBAAsBC,mBAAAA,qBACpFM,MAAM,EACNC,eAAe,mCAQkBhB,eAAiBU,eAAMC,OAAO,CAC/DC,WAAYC,mBAAUC,OAAO,kCAAmC,IAChEC,MAAM,EACNC,eAAe,gCAOehB,eAAiBU,eAAMC,OAAO,CAC5DI,MAAM,EACNC,eAAe,EACfC,OAAO,kCAOyBjB,eAAiBU,eAAMC,OAAO,CAC9DI,MAAM,EACNC,eAAe,EACfC,OAAO,8BAQqBjB,eAAiBU,eAAMC,OAAO,CAC1DO,MAAO,sBACPN,WAAYC,mBAAUC,OAAO,iCAAkC,IAC/DC,MAAM,EACNC,eAAe,4BAQWhB,eAAiBU,eAAMC,OAAO,CACxDO,MAAO,oBACPN,WAAYC,mBAAUC,OAAO,+BAAgC,IAC7DC,MAAM,EACNC,eAAe,6BAQYhB,eAAiBU,eAAMC,OAAO,CACzDO,MAAO,qBACPN,WAAYC,mBAAUC,OAAO,gCAAiC,IAC9DC,MAAM,EACNI,KAAM,SACNH,eAAe,6BAQYhB,eAAiBU,eAAMC,OAAO,CACzDC,WAAYC,mBAAUC,OAAO,qCAAsC,IACnEC,MAAM,EACNC,eAAe,sCAQqBhB,iBAChBU,eAAMC,OAAO,CAC7BO,MAAO,iBACPN,WAAYC,mBAAUC,OAAO,0CAA2C,OAEtEC,6BAciB,CAACzB,UAAWC,YAAa6B,YAAavB,OAAQwB,WAAYC,iBAC3E7B,QAAU,CACZC,WAAY,gCACZC,KAAM,CACFL,UAAAA,UACAM,YAAaL,YACb6B,YAAAA,YACAvB,OAAAA,OACAwB,WAAAA,WACAC,QAAAA,iBAIDxB,cAAKC,KAAK,CAACN,UAAU,sCASS8B,kBAC/B9B,QAAU,CACZC,WAAY,8CACZC,KAAM,CACF4B,UAAAA,mBAIDzB,cAAKC,KAAK,CAACN,UAAU,qBASR+B,kBACd/B,QAAU,CACZC,WAAY,4BACZC,KAAM,CACF6B,UAAAA,mBAID1B,cAAKC,KAAK,CAACN,UAAU"}